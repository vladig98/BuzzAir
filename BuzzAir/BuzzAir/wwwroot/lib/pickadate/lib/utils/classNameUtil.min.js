/**
 * Failed to minify the file using Terser v5.39.0. Serving the original version.
 * Original file: /npm/pickadate@5.0.0-alpha.3/lib/utils/classNameUtil.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
// @flow

export const flatten = (
  classNames: mixed | Array<mixed | Array<mixed>>
): { [string]: boolean } => {
  const classList = Array.isArray(classNames) ? classNames : [classNames]
  return classList.reduce((accumulator, className) => {
    if (!className) {
      return accumulator
    }
    if (Array.isArray(className)) {
      className.forEach(className => {
        if (typeof className === 'string') {
          accumulator[className] = true
        }
      })
    } else if (typeof className === 'string') {
      accumulator[className] = true
    } else if (className.constructor === Object) {
      accumulator = { ...accumulator, ...className }
    }
    return accumulator
  }, {})
}

export const join = (
  classNames: mixed | Array<mixed | Array<mixed>>
): string => {
  const classData = flatten(classNames)
  return Object.keys(classData)
    .reduce((accumulator, className) => {
      if (classData[className]) {
        accumulator.push(className)
      }
      return accumulator
    }, [])
    .join(' ')
}
